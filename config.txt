{
	"(kcuF.ui)": {
		requiredJs: ["assets/js/kcuF.js", "assets/js/kcuF.util.js", "assets/js/kcuF.template.js", "assets/tmpl/kcuF_all.js"]
	},
	"(kcuF.ui) Dialog": {
		base: "(kcuF.ui)",
		clz: "kcuF.ui.Dialog",
		js: ["assets/js/kcuF.ui.Dialog.js"],
		css: ["assets/css/dialog.css"],
		requiredJs: ["assets/vendor/jquery.ui.core.js", "assets/vendor/jquery.ui.widget.js", "assets/vendor/jquery.ui.mouse.js", "assets/vendor/jquery.ui.draggable.js"],
		requiredCss: ["assets/css/common.css"],// TODO only button is needed
		optsExt: {
			title: {
				val: "dialog title"
			},
			content: {
				val: "dialog content~"
			},
			buttons: {
				val: [{
					text: "Yes",
					callback: function() {
						alert("i return nothing, the dialog will close\nand i am disabled now");
					},
					disabled: false,
					defaultButton: false,
					align: "left"
				}, {
					text: "No",
					callback: function() {
						alert("i return true, the dialog will close\nand i am disabled now");
						return true;
					},
					disabled: false,
					defaultButton: false
				}, {
					text: "Cancel",
					callback: function() {
						alert("i return false, the dialog will NOT close\nand my \"disableOnClick\" is false so i won't be disabled");
						return false;
					},
					disabled: false,
					disableOnClick: false,
					defaultButton: true
				}]
			},
			headerOption: {
				choose: ["default", "hidden"]
			}
		}
	},
	"(kcuF.ui) Menu": {
		base: "(kcuF.ui)",
		clz: "kcuF.ui.Menu",
		js: ["assets/js/kcuF.ui.Menu.js"],
		css: ["assets/css/menu.css"],
		styles: [".menu-toggler {",
			"position: absolute;",
		"}"],
		doTest: function(Clz, opts) {
			if ($(".menu-toggler").length) {
				alert("alreay done!");
				return;
			}
			var menu = new Clz(opts),
				togglers = $([
					"<a class=\"menu-toggler\" href=\"javascript:void(0);\">toggle</a>",
					"<a class=\"menu-toggler\" href=\"javascript:void(0);\" style=\"right: 5px;\">toggle</a>",
					"<a class=\"menu-toggler\" href=\"javascript:void(0);\" style=\"bottom: 5px;\">toggle</a>",
					"<a class=\"menu-toggler\" href=\"javascript:void(0);\" style=\"bottom: 5px; right: 5px;\">toggle</a>"
				].join("")).appendTo("body");
			
			menu.bindToggler(togglers);
			menu.bindToggler($(["<div style=\"position: absolute; top: 400px; left: 200px; background: #9CF; width: 300px; height: 200px;\">",
				"<a class=\"menu-toggler\" href=\"javascript:void(0);\" style=\"top: 20px; right: 20px;\">toggle</a>",
				"<a class=\"menu-toggler\" href=\"javascript:void(0);\" style=\"left: 20px; bottom: 20px;\">toggle</a>",
			"</div>"].join("")).appendTo("body").find("a.menu-toggler"));
		},
		optsExt: {
			items: {
				val: [{
					key: "item0",
					text: "normal without callback"
				}, {
					key: "item1",
					text: "normal callback",
					callback: function() {
						alert("callback: i return nothing - the menu will be closed");
					}
				}, {
					key: "item2",
					text: "normal callback return false",
					callback: function() {
						alert("callback: i return false - the menu will NOT be closed");
						return false;
					}
				}, {
					key: "item3",
					text: "disabled without callback",
					disabled: true
				}, {
					key: "item4",
					text: "disabled callback",
					disabled: true,
					separator: true,
					disabledCallback: function() {
						alert("disabledCallback: i'm disabled and i return nothing - the menu will NOT be closed");
					}
				}, {
					key: "item5",
					text: "disabled callback return true",
					disabled: true,
					disabledCallback: function() {
						alert("disabledCallback: i'm disabled and i return true - the menu will be closed");
						return true;
					}
				}]
			}
		}
	},
	"(kcuF.ui) Grid": {
		base: "(kcuF.ui)",
		clz: "kcuF.ui.Grid",
		js: ["assets/js/kcuF.ui.Grid.js"],
		css: ["assets/css/grid.css"],
		optsExt: {
			width: {
				val: 500
			},
			columns: {
				val: [{
					key: "status",
					name: "&#10070;",
					hint: "status",
					align: "center",
					width: 20
				}, {
					key: "av",
					name: "&#9742;",
					hint: "a-v",
					align: "center",
					width: 20
				}, {
					key: "name",
					name: "Name",
					edit: true
				}, {
					name: ""
				}]
			},
			items: {
				val: [{
					id: "0001",
					name: "\u4F60",
					status: "&#10050;",
					av: "&#9771;"
				}, {
					id: "0002",
					name: "\u6211",
					status: "&#10050;",
					av: "&#9762;"
				}, {
					id: "0003",
					name: "\u4ED6",
					status: "&#10050;",
					av: "&#9762;"
				}, {
					id: "0004",
					name: "\u5979",
					status: "",
					av: ""
				}]
			}
		}
	},
	"(kcuF.ui) Grid [tree]": {
		base: "(kcuF.ui) Grid",
		optsExt: {
			tree: {
				val: true
			},
			columns: {
				val: [{
					key: "name",
					name: "Name",
					width: 200
				}, {
					key: "value",
					name: "Value"
				}]
			},
			items: {
				val: [{
					name: "Options",
					value: "...",
					_children_: [{
						name: "fuckable",
						value: "true"
					}, {
						name: "fuckTarget",
						value: "U"
					}]
				}, {
					name: "Statics",
					_children_: [{
						name: "TMPL_UI",
						value: "<b>${text}</b>"
					}, {
						name: "OPTS",
						value: "xxx",
						_children_: [{
							name: "disabled",
							value: true
						}, {
							name: "closable",
							value: true
						}]
					}]
				}, {
					name: "Dynamics",
					_children_: [{
						name: "_ui",
						value: null
					}, {
						name: "_options",
						value: null
					}]
				}]
			}
		}
	}
}